// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
  IN in[16], load, inc, reset;
  OUT out[16];

 PARTS:
  // This is the register that will keep the counter state
  Register(in = nextVal, load = true,
           out = state);

  // The incremented state. May or may not be written back to the register
  Inc16(in = state,
        out = incState);

  // Should we increment the counter?
  Mux16(a = state, b = incState, sel = inc,
        out = o1);

  // Should we load the counter with the input value?
  Mux16(a = o1, b = in, sel = load,
        out = o2);

  // Should we reset the counter regardless of everything else ?
  Mux16(a = o2, b = false, sel = reset,
        out = nextVal);

  // Forwarding state to output
  Or16(a = state, b = state,
       out = out);
}
