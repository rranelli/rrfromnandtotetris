// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/Mux4Way16.hdl

/**
 * 4-way 16-bit multiplexor:
 * out = a if sel == 00
 *       b if sel == 01
 *       c if sel == 10
 *       d if sel == 11
 */

CHIP Mux4Way16 {
    IN a[16], b[16], c[16], d[16], sel[2];
    OUT out[16];

    PARTS:
    Not (in = sel[0], out = notSel0);
    Not (in = sel[1], out = notSel1);

    And (a = notSel0, b = notSel1, out = selA);
    And (a = sel[0],  b = notSel1, out = selB);
    And (a = notSel0, b = sel[1],  out = selC);
    And (a = sel[0],  b = sel[1],  out = selD);

    And16 (a[0] = selA,
           a[1] = selA,
           a[2] = selA,
           a[3] = selA,
           a[4] = selA,
           a[5] = selA,
           a[6] = selA,
           a[7] = selA,
           a[8] = selA,
           a[9] = selA,
           a[10] = selA,
           a[11] = selA,
           a[12] = selA,
           a[13] = selA,
           a[14] = selA,
           a[15] = selA,
           b = a, out = outa);

    And16 (a[0] = selB,
           a[1] = selB,
           a[2] = selB,
           a[3] = selB,
           a[4] = selB,
           a[5] = selB,
           a[6] = selB,
           a[7] = selB,
           a[8] = selB,
           a[9] = selB,
           a[10] = selB,
           a[11] = selB,
           a[12] = selB,
           a[13] = selB,
           a[14] = selB,
           a[15] = selB,
           b = b, out = outb);

    And16 (a[0] = selC,
           a[1] = selC,
           a[2] = selC,
           a[3] = selC,
           a[4] = selC,
           a[5] = selC,
           a[6] = selC,
           a[7] = selC,
           a[8] = selC,
           a[9] = selC,
           a[10] = selC,
           a[11] = selC,
           a[12] = selC,
           a[13] = selC,
           a[14] = selC,
           a[15] = selC,
           b = c, out = outc);

    And16 (a[0] = selD,
           a[1] = selD,
           a[2] = selD,
           a[3] = selD,
           a[4] = selD,
           a[5] = selD,
           a[6] = selD,
           a[7] = selD,
           a[8] = selD,
           a[9] = selD,
           a[10] = selD,
           a[11] = selD,
           a[12] = selD,
           a[13] = selD,
           a[14] = selD,
           a[15] = selD,
           b = d, out = outd);

    Or16 (a = outa, b = outb, out = o1);
    Or16 (a = o1,   b = outc, out = o2);
    Or16 (a = o2,   b = outd, out = out);
}
