// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/Mux8Way16.hdl

/**
 * 8-way 16-bit multiplexor:
 * out = a if sel == 000
 *       b if sel == 001
 *       etc.
 *       h if sel == 111
 */

CHIP Mux8Way16 {
    IN a[16], b[16], c[16], d[16],
       e[16], f[16], g[16], h[16],
       sel[3];
    OUT out[16];

    PARTS:
    Not (in = sel[0], out = notSel0);
    Not (in = sel[1], out = notSel1);
    Not (in = sel[2], out = notSel2);

    And (a = notSel0, b = notSel1, out = selA1);
    And (a = selA1,   b = notSel2, out = selA);

    And (a = sel[0],  b = notSel1, out = selB1);
    And (a = selB1,   b = notSel2, out = selB);

    And (a = notSel0, b = sel[1],  out = selC1);
    And (a = selC1,   b = notSel2, out = selC);

    And (a = sel[0],  b = sel[1],  out = selD1);
    And (a = selD1,   b = notSel2, out = selD);

    And (a = notSel0, b = notSel1, out = selE1);
    And (a = selE1,   b = sel[2],  out = selE);

    And (a = sel[0],  b = notSel1, out = selF1);
    And (a = selF1,   b = sel[2],  out = selF);

    And (a = notSel0, b = sel[1],  out = selG1);
    And (a = selG1,   b = sel[2],  out = selG);

    And (a = sel[0],  b = sel[1],  out = selH1);
    And (a = selH1,   b = sel[2],  out = selH);

    And16 (a[0] = selA,
           a[1] = selA,
           a[2] = selA,
           a[3] = selA,
           a[4] = selA,
           a[5] = selA,
           a[6] = selA,
           a[7] = selA,
           a[8] = selA,
           a[9] = selA,
           a[10] = selA,
           a[11] = selA,
           a[12] = selA,
           a[13] = selA,
           a[14] = selA,
           a[15] = selA,
           b = a, out = outa);

    And16 (a[0] = selB,
           a[1] = selB,
           a[2] = selB,
           a[3] = selB,
           a[4] = selB,
           a[5] = selB,
           a[6] = selB,
           a[7] = selB,
           a[8] = selB,
           a[9] = selB,
           a[10] = selB,
           a[11] = selB,
           a[12] = selB,
           a[13] = selB,
           a[14] = selB,
           a[15] = selB,
           b = b, out = outb);

    And16 (a[0] = selC,
           a[1] = selC,
           a[2] = selC,
           a[3] = selC,
           a[4] = selC,
           a[5] = selC,
           a[6] = selC,
           a[7] = selC,
           a[8] = selC,
           a[9] = selC,
           a[10] = selC,
           a[11] = selC,
           a[12] = selC,
           a[13] = selC,
           a[14] = selC,
           a[15] = selC,
           b = c, out = outc);

    And16 (a[0] = selD,
           a[1] = selD,
           a[2] = selD,
           a[3] = selD,
           a[4] = selD,
           a[5] = selD,
           a[6] = selD,
           a[7] = selD,
           a[8] = selD,
           a[9] = selD,
           a[10] = selD,
           a[11] = selD,
           a[12] = selD,
           a[13] = selD,
           a[14] = selD,
           a[15] = selD,
           b = d, out = outd);

    And16 (a[0] = selE,
           a[1] = selE,
           a[2] = selE,
           a[3] = selE,
           a[4] = selE,
           a[5] = selE,
           a[6] = selE,
           a[7] = selE,
           a[8] = selE,
           a[9] = selE,
           a[10] = selE,
           a[11] = selE,
           a[12] = selE,
           a[13] = selE,
           a[14] = selE,
           a[15] = selE,
           b = e, out = oute);

    And16 (a[0] = selF,
           a[1] = selF,
           a[2] = selF,
           a[3] = selF,
           a[4] = selF,
           a[5] = selF,
           a[6] = selF,
           a[7] = selF,
           a[8] = selF,
           a[9] = selF,
           a[10] = selF,
           a[11] = selF,
           a[12] = selF,
           a[13] = selF,
           a[14] = selF,
           a[15] = selF,
           b = f, out = outf);

    And16 (a[0] = selG,
           a[1] = selG,
           a[2] = selG,
           a[3] = selG,
           a[4] = selG,
           a[5] = selG,
           a[6] = selG,
           a[7] = selG,
           a[8] = selG,
           a[9] = selG,
           a[10] = selG,
           a[11] = selG,
           a[12] = selG,
           a[13] = selG,
           a[14] = selG,
           a[15] = selG,
           b = g, out = outg);

    And16 (a[0] = selH,
           a[1] = selH,
           a[2] = selH,
           a[3] = selH,
           a[4] = selH,
           a[5] = selH,
           a[6] = selH,
           a[7] = selH,
           a[8] = selH,
           a[9] = selH,
           a[10] = selH,
           a[11] = selH,
           a[12] = selH,
           a[13] = selH,
           a[14] = selH,
           a[15] = selH,
           b = h, out = outh);

    Or16 (a = outa, b = outb, out = o1);
    Or16 (a = o1,   b = outc, out = o2);
    Or16 (a = o2,   b = outd, out = o3);
    Or16 (a = o3,   b = oute, out = o4);
    Or16 (a = o4,   b = outf, out = o5);
    Or16 (a = o5,   b = outg, out = o6);
    Or16 (a = o6,   b = outh, out = out);
}
